{"version":3,"file":"static/js/66.2af3d2ed.chunk.js","mappings":"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","sources":["components/pages/PagesStyled.jsx","components/UserCard/UserCardStyled.jsx","components/UserCard/UserCard.jsx","components/pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const UsersList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  justify-items: center;\n  align-items: center;\n`;\n\nexport const LoadMoreButton = styled.button`\n  width: 196px;\n  height: 50px;\n\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n\n  cursor: pointer;\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background: #5cd3a8;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  gap: 20px;\n  cursor: pointer;\n  margin-bottom: 24px;\n  align-items: baseline;\n`;\n\nexport const BackLinkText = styled.p`\n  font-size: 36px;\n  font-weight: 600;\n  color: #5F9EA0;\n  &:hover {\n    color: #9400D3;\n  }\n  &.active {\n    color: #9400D3;\n   \n  }\n`;\n\nexport const HomeSection = styled.section`\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 100px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  font-weight: 600;\n  color: #9400D3;\n\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 550px;\n  height: 360px;\n \n  z-index: -1;\n`;\n","import styled from '@emotion/styled';\n\nexport const UserItem = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  margin-bottom: 26px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const LogoImage = styled.img`\n  display: block;\n  padding: 20px;\n`;\n\nexport const BackgroundImage = styled.img`\n  position: absolute;\n  display: block;\n  top: 28px;\n  left: 36px;\n`;\n\nexport const DecorationLine = styled.div`\n  position: absolute;\n  width: 380px;\n  height: 8px;\n  left: 0px;\n  top: 214px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const Avatar = styled.div`\n  position: absolute;\n  top: 178px;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const DecorationCircle = styled.img`\n  position: absolute;\n  display: block;\n  width: 80px;\n  height: 80px;\n  top: 0px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 9;\n`;\n\nexport const UserImage = styled.img`\n  position: absolute;\n  display: block;\n  width: 64px;\n  height: 64px;\n  top: 0px;\n  left: 50%;\n  object-fit: cover;\n  transform: translateX(-50%);\n  border-radius: 50%;\n`;\n\nexport const TextContainer = styled.div`\n  position: absolute;\n  top: 284px;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  width: 100%;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n\n  &:first-of-type {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  width: 196px;\n  height: 50px;\n  left: 92px;\n  top: 374px;\n\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover {\n    background-color: #ffd8ff;\n  }\n`;\n\nexport const ButtonActive = styled.button`\n  position: absolute;\n  width: 196px;\n  height: 50px;\n  left: 92px;\n  top: 374px;\n\n  background: #5cd3a8;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #5cc2d3;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  UserItem,\n  LogoImage,\n  BackgroundImage,\n  DecorationLine,\n  UserImage,\n  Text,\n  TextContainer,\n  Button,\n  ButtonActive,\n  DecorationCircle,\n  Avatar,\n} from \"./UserCardStyled\";\n\n\nimport logo from \"../../images/logo.png\";\nimport background_image from \"../../images/background_image.png\";\nimport user from \"../../images/user.png\";\nimport ellipse from \"../../images/ellipse.png\";\n\nconst UserCard = ({ id, tweets, followers, avatar }) => {\n  const [isFollowing, setIsFollowing] = useState(\n    JSON.parse(localStorage.getItem(`isFollowing-${id}`)) ?? false\n  );\n  const [followerCount, setFollowerCount] = useState(\n    JSON.parse(localStorage.getItem(`followers-${id}`)) ?? followers\n  );\n\n  useEffect(() => {\n    localStorage.setItem(`isFollowing-${id}`, JSON.stringify(isFollowing));\n    localStorage.setItem(`followers-${id}`, JSON.stringify(followerCount));\n  }, [isFollowing, followerCount, id]);\n\n  const handleFollowClick = () => {\n    if (isFollowing) {\n      setIsFollowing(false);\n      setFollowerCount((prevCount) => prevCount - 1);\n    } else {\n      setIsFollowing(true);\n      setFollowerCount((prevCount) => prevCount + 1);\n    }\n  };\n\n  let newFollowers = followerCount.toLocaleString(\"en-US\", {\n    minimumFractionDigits: 0,\n  });\n\n  return (\n    <UserItem key={id}>\n      <LogoImage src={logo} alt=\"logo\" />\n      <BackgroundImage src={background_image} alt=\"background image\" />\n      <DecorationLine />\n      <Avatar>\n        <DecorationCircle src={ellipse} alt=\"\" />\n        <UserImage src={avatar ? avatar : user} alt=\"avatar\" />\n      </Avatar>\n      <TextContainer>\n        <Text>{tweets} tweets</Text>\n        <Text>{newFollowers} followers</Text>\n      </TextContainer>\n      {isFollowing ? (\n        <ButtonActive type=\"button\" onClick={handleFollowClick}>\n          Following\n        </ButtonActive>\n      ) : (\n        <Button type=\"button\" onClick={handleFollowClick}>\n          Follow\n        </Button>\n      )}\n    </UserItem>\n  );\n};\n\nexport default UserCard;\n","import axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport UserCard from '../UserCard/UserCard';\n\nimport {\n  UsersList,\n  LoadMoreButton,\n  BackLink,\n  BackLinkText,\n} from './PagesStyled';\n\nconst BASE_URL = 'https://6468e47ee99f0ba0a82f9a0d.mockapi.io/users';\nconst USERS_PER_PAGE = 3;\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [visibleUsers, setVisibleUsers] = useState([]);\n  const location = useLocation();\n  const backPage = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await axios.get(BASE_URL);\n        setUsers(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    setVisibleUsers([]);\n  }, [users]);\n\n  useEffect(() => {\n    const firstIndex = (page - 1) * USERS_PER_PAGE;\n    const nextIndex = firstIndex + USERS_PER_PAGE;\n    setVisibleUsers(prevVisibleUsers => [\n      ...prevVisibleUsers,\n      ...users.slice(firstIndex, nextIndex),\n    ]);\n  }, [users, page]);\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <BackLink to={backPage.current}>\n       \n        <BackLinkText>Go back</BackLinkText>\n      </BackLink>\n      <UsersList>\n        {visibleUsers.map(({ id, tweets, followers, avatar }) => (\n          <UserCard\n            key={id}\n            id={id}\n            tweets={tweets}\n            followers={followers}\n            avatar={avatar}\n          />\n        ))}\n      </UsersList>\n      {users.length > visibleUsers.length && (\n        <LoadMoreButton onClick={loadMore}>Load More</LoadMoreButton>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["UsersList","styled","LoadMoreButton","BackLink","Link","BackLinkText","HomeSection","Title","BackgroundImage","UserItem","LogoImage","DecorationLine","Avatar","DecorationCircle","UserImage","TextContainer","Text","Button","ButtonActive","id","tweets","followers","avatar","useState","JSON","parse","localStorage","getItem","isFollowing","setIsFollowing","followerCount","setFollowerCount","useEffect","setItem","stringify","handleFollowClick","prevCount","newFollowers","toLocaleString","minimumFractionDigits","src","alt","background_image","user","type","onClick","users","setUsers","page","setPage","visibleUsers","setVisibleUsers","location","useLocation","backPage","useRef","state","from","getUsers","axios","response","data","console","error","firstIndex","nextIndex","prevVisibleUsers","slice","to","current","map","length","prevPage"],"sourceRoot":""}